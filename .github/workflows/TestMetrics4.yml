name: Testing Monthly issue metrics
on:
  workflow_dispatch:
  schedule:
    - cron: '* * * * 1-5'

permissions:
  issues: write
  pull-requests: read

jobs:
  build:
    name: issue metrics
    runs-on: ubuntu-latest
    steps:
    - name: Setting the Repo
      uses: actions/github-script@v6
      with:
          script: |
            // - github: A pre-authenticated octokit/rest.js client
            const { owner, repo } = context.repo;
    - name: Get dates for last month
      shell: bash
      run: |
        # Calculate the first day of the previous month
        first_day=$(date -d "last month" +%Y-%m-01)

        # Calculate the last day of the previous month
        last_day=$(date -d "$first_day +1 month -1 day" +%Y-%m-%d)

        #Set an environment variable with the date range
        echo "$first_day..$last_day"
        echo "last_month=$first_day..$last_day" >> "$GITHUB_ENV"

    - name: Run issue-metrics tool for issues opened in this month
      id: issue-metrics1
      uses: github/issue-metrics@v3
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        LABELS_TO_MEASURE: 'Status: Open,Status:Accepted,Status:Pending'
        SEARCH_QUERY: 'repo:RamyaBill/AutomateGitRepo is:issue created:2023-01-01..2023-12-31'
           
    - name: Print output of open issues from the metrics tool 
      run: echo "${{ steps.issue-metrics1.outputs.metrics }}"

    - name: Run custom script
      id: run-script
      uses: actions/github-script@v6
      with:
        script: |
          const metrics = JSON.parse('${{ steps.issue-metrics1.outputs.metrics }}');
          const issues = { ...metrics.issues };
          let issuesString = '';
          for (const key in issues) {
            if (Object.hasOwnProperty.call(issues, key)) {
                  const issue = issues[key];
                 issuesString += `| ${issue.title} | ${issue.html_url} | [${issue.author}](${issue.html_url}) | ${issue.time_to_first_response} | ${issue.time_to_close} | ${issue.time_to_answer} | ${issue.label_metrics['Status: Open']} | ${issue.label_metrics['Status:Accepted']} | ${issue.label_metrics['Status:Pending']} |\n`;
                }
            }

          console.log(issuesString);
          return issuesString;
          
    - name: Log issues string
      run:  |
        echo "Issues string: ${{ steps.run-script.outputs.issuesString}}"       
  
    - name: Notify MS Teams channel with Open issues
      id: notify-ms-teams-open
      uses: simbo/msteams-message-card-action@latest
      with:
          webhook: ${{ secrets.TEAMS_INCOMING_WEBHOOK_URL }}
          title: Payara Github community issues opened in this month 
          message: |
              <code>
              <p>
                  |----------- Metric ------------|--------------Average --------|</p>
               <p>|-------------------------------|------------------------------|</p>
               <p>| Time to first response | ${{ fromJSON(steps.issue-metrics1.outputs.metrics).average_time_to_first_response }} |</p>
               <p>| Time to close | ${{ fromJSON(steps.issue-metrics1.outputs.metrics).average_time_to_close }}  |</p>
               <p>| Time spent in Status: Open | ${{ fromJSON(steps.issue-metrics1.outputs.metrics).average_time_in_labels['Status: Open'] }} |</p>
               <p>| Time spent in Status:Accepted | ${{ fromJSON(steps.issue-metrics1.outputs.metrics).average_time_in_labels['Status:Accepted'] }} |</p>
               <p>| Time spent in Status:Pending | ${{ fromJSON(steps.issue-metrics1.outputs.metrics).average_time_in_labels['Status:Pending'] }} |</p>
               <p> </p>
                <p>
                <p>|----------- Metric ------------|--------------Average --------|</p>
                <p>|-------------------------------|------------------------------|</p>
                <p>| Number of items that remain open | ${{ fromJSON(steps.issue-metrics1.outputs.metrics).num_items_opened }} | </p>
                <p>| Number of items closed | ${{ fromJSON(steps.issue-metrics1.outputs.metrics).num_items_closed }} | </p>
                <p>| Total number of items created | ${{ fromJSON(steps.issue-metrics1.outputs.metrics).total_item_count }} | </p>
                <p> </p>
                <p>| Title | URL | Author | Time to first response | Time to close | Time to answer | Time spent in Status: Open | Time spent in Status:Accepted | Time spent in Status:Pending |</p>
                <p>   |------- | --- |------ | --- | --- | --- | --- | --- | --- | </p>
                <p>${{ steps.run-script.outputs.issuesString}}</p></code>

         

              
                
                


     
