name: Test Most Voted Enhancement

on:
  schedule:
    - cron: "* * * * 1-5"

jobs:
  voting-labeler-test:
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Check for most voted enhancement
        id: vote-issues
        uses: actions/github-script@v6
        env:
          //daysInterval: ${{ vars.MONITORING_INACTIVE_INTERVAL_DAYS }}
        with:
          script: |
            // - github: A pre-authenticated octokit/rest.js client
            const { owner, repo } = context.repo;
            const openLabel = "Status: Open";
            const votingLabel = "Status: Voting";
            
            //const parsedDays = parseFloat("${{ env.daysInterval }}");
            const parsedDays = 0;
            const timeThreshold = parsedDays * 24 * 60 * 60 * 1000;
            
            // Query all GH issues for Voting 
            const issuesResponse = await github.rest.issues.listForRepo({
              owner,
              repo,
              labels: votingLabel,
              state: 'open',
              sort: 'reactions-+1',
              direction: 'desc',
            });
            
            //issuesResponse has all the issues labeled with Voting.
            if (issuesResponse.data.length === 0) {
              core.info('No Voting issues found to process. Exiting.');
              return;
            }
            //if there are more than 1 issues for voting
            if (issuesResponse.data.length > 1) {
              issuesResponse.data.sort.reactions-+1;
              core.info('Number of issues for voting is ${issuesResponse.data.length}');
              
            }

            for (const issue of issuesResponse.data) {
               
               const updatedAt = new Date(issue.updated_at).getTime();
               const currentTime = new Date().getTime();
               const updateMessage = `Test voting..`;
               //echo "::set-output name=vote-issues::$issue.number"
               core.info(`Processing issue #${issue.number}`);
               core.info(`Number of +1 reactions ${issue.reactions}`);
              
            }
